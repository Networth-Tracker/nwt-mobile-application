name: Build and Deploy App

on:  
  push:
    branches:
      - dev
  
  workflow_dispatch:
    inputs:
      release_notes:
        description: 'Release notes for this build'
        required: false
        default: 'Feature updates and improvements'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout 
        uses: actions/checkout@v3

      # Setup Java with cache
      - name: Setup Java 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: 'gradle'
      
      # Accept Android SDK Licenses
      - name: Accept Android SDK Licenses
        run: yes | $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager --licenses || true

      # Setup Flutter
      - name: Install Flutter Version 3.29.3
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.29.3'
          cache: true

      # Cache Flutter dependencies
      - name: Cache Flutter dependencies
        uses: actions/cache@v3
        with:
          path: ${{ env.PUB_CACHE }}
          key: ${{ runner.os }}-pub-cache-${{ hashFiles('**/pubspec.lock') }}
          restore-keys: |
            ${{ runner.os }}-pub-cache-

      - name: Install Dependencies
        run: flutter pub get

      - name: Build APK
        run: flutter build apk --split-per-abi --no-tree-shake-icons
      
      - name: Rename APK with Build Number
        run: |
          mkdir -p build/renamed_apks
          cp build/app/outputs/flutter-apk/app-armeabi-v7a-release.apk build/renamed_apks/nwt-app-v0.0.${{ github.run_number }}.apk
      
      - name: Generate Simple Release Notes
        run: |
          mkdir -p build/release_notes
          cat > build/release_notes/release_notes.txt << EOL
          Version: v0.0.${{ github.run_number }}
          Build Date: $(date +'%Y-%m-%d %H:%M:%S')
          Commit: ${{ github.sha }}
          Notes: ${{ github.event.inputs.release_notes || 'Feature updates and improvements' }}
          EOL

      - name: Upload to Firebase App Distribution
        id: firebase_distribution
        uses: wzieba/Firebase-Distribution-Github-Action@v1
        with:
          appId: ${{ secrets.FIREBASE_APP_ID }}
          serviceCredentialsFileContent: ${{ secrets.FIREBASE_SERVICE_ACCOUNT }}
          groups: devs
          file: build/renamed_apks/nwt-app-v0.0.${{ github.run_number }}.apk
          releaseNotesFile: build/release_notes/release_notes.txt

      - name: Capture Firebase Distribution Output
        id: capture_output
        run: |
          CONSOLE_URL="https://console.firebase.google.com/project/${{ secrets.FIREBASE_PROJECT_ID }}/appdistribution/app/${{ secrets.FIREBASE_APP_ID }}/releases"
          TESTER_URL="https://appdistribution.firebase.google.com/testerapps/${{ secrets.FIREBASE_APP_ID }}"

          cat > firebase_output.txt << EOL
          ✅ App successfully uploaded to Firebase App Distribution!

          🔗 Firebase Console: $CONSOLE_URL  
          👨‍💻 Tester Link (requires login): $TESTER_URL  
          EOL

          echo "FIREBASE_OUTPUT<<EOF" >> $GITHUB_ENV
          cat firebase_output.txt >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV

          cat firebase_output.txt

      - name: Read Release Notes to Env
        run: |
          echo "RELEASE_NOTES<<EOF" >> $GITHUB_ENV
          cat build/release_notes/release_notes.txt >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV

      - name: Push to GitHub Releases
        uses: ncipollo/release-action@v1
        with:
          artifacts: "build/renamed_apks/nwt-app-v0.0.${{ github.run_number }}.apk"
          token: ${{ secrets.TOKEN }}
          tag: "v0.0.${{ github.run_number }}"
          name: "NetWorth Tracker v0.0.${{ github.run_number }}"
          body: |
            Release v0.0.${{ github.run_number }}
            Commit: ${{ github.sha }}

            ## Firebase App Distribution
            ${{ env.FIREBASE_OUTPUT }}

            ## Release Notes
            ${{ env.RELEASE_NOTES }}
