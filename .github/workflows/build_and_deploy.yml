name: Build and Deploy App

on:  
  pull_request:
    branches:
      - dev
  
  workflow_dispatch:
    inputs:
      release_notes:
        description: 'Release notes for this build'
        required: false
        default: 'Feature updates and improvements'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout 
        uses: actions/checkout@v3

      # Setup Java with cache
      - name: Setup Java 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: 'gradle'
      
      # Cache Android SDK components
      - name: Cache Android SDK
        uses: actions/cache@v3
        id: android-sdk-cache
        with:
          path: |
            /usr/local/lib/android/sdk/ndk
            /usr/local/lib/android/sdk/cmake
          key: ${{ runner.os }}-android-sdk-${{ hashFiles('**/build.gradle') }}
          restore-keys: |
            ${{ runner.os }}-android-sdk-

      # Setup Flutter with cache
      - name: Install Flutter Version 3.29.3
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.29.3'
          cache: true

      # Cache Flutter dependencies
      - name: Cache Flutter dependencies
        uses: actions/cache@v3
        with:
          path: ${{ env.PUB_CACHE }}
          key: ${{ runner.os }}-pub-cache-${{ hashFiles('**/pubspec.lock') }}
          restore-keys: |
            ${{ runner.os }}-pub-cache-

      - name: Install Dependencies
        run: flutter pub get

      - name: Build APK
        run: flutter build apk --split-per-abi --no-tree-shake-icons
      
      - name: Rename APK with Build Number
        run: |
          mkdir -p build/renamed_apks
          cp build/app/outputs/flutter-apk/app-armeabi-v7a-release.apk build/renamed_apks/nwt-app-v0.0.${{ github.run_number }}.apk
      
      - name: Get PR Description
        if: github.event_name == 'pull_request'
        id: pr_description
        run: |
          PR_DESCRIPTION="$(jq -r .pull_request.body "$GITHUB_EVENT_PATH" | sed 's/null/No description provided/')"
          echo "PR_DESCRIPTION<<EOF" >> $GITHUB_ENV
          echo "$PR_DESCRIPTION" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV

      - name: Get Recent Commits
        if: github.event_name != 'pull_request'
        id: recent_commits
        run: |
          RECENT_COMMITS=$(git log -n 5 --pretty=format:"- %s" | grep -v "Merge")
          echo "RECENT_COMMITS<<EOF" >> $GITHUB_ENV
          echo "$RECENT_COMMITS" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV

      - name: Generate Release Notes
        run: |
          mkdir -p build/release_notes
          
          # Determine release notes content based on event type
          if [ "${{ github.event_name }}" == "pull_request" ]; then
            NOTES_CONTENT="${{ env.PR_DESCRIPTION }}"
          elif [ "${{ github.event_name }}" == "workflow_dispatch" ] && [ -n "${{ github.event.inputs.release_notes }}" ]; then
            NOTES_CONTENT="${{ github.event.inputs.release_notes }}"
          else
            NOTES_CONTENT="${{ env.RECENT_COMMITS }}"
          fi
          
          cat > build/release_notes/release_notes.txt << EOL
          Version: v0.0.${{ github.run_number }}
          Build Date: $(date +'%Y-%m-%d %H:%M:%S')
          Commit: ${{ github.sha }}
          
          ## What's New
          $NOTES_CONTENT
          
          ## Known Issues
          - None
          EOL
      

      - name: Upload to Firebase App Distribution
        id: firebase_distribution
        uses: wzieba/Firebase-Distribution-Github-Action@v1
        with:
          appId: ${{ secrets.FIREBASE_APP_ID }}
          serviceCredentialsFileContent: ${{ secrets.FIREBASE_SERVICE_ACCOUNT }}
          groups: devs
          file: build/renamed_apks/nwt-app-v0.0.${{ github.run_number }}.apk
          releaseNotesFile: build/release_notes/release_notes.txt
      
      # Extract Firebase App Distribution URL from output
      - name: Extract Firebase Distribution URL
        id: extract_url
        run: |
          # Look for the tester URL in the logs
          TESTER_URL=$(grep -o 'https://appdistribution.firebase.google.com/testerapps/[^"]*' $GITHUB_STEP_SUMMARY || echo "URL not found")
          echo "TESTER_URL=$TESTER_URL" >> $GITHUB_ENV
          echo "Found tester URL: $TESTER_URL"
      
      - name: Push to GitHub Releases
        uses: ncipollo/release-action@v1
        with:
          artifacts: "build/renamed_apks/nwt-app-v0.0.${{ github.run_number }}.apk"
          token: ${{ secrets.TOKEN }}
          tag: "v0.0.${{ github.run_number }}"
          name: "NetWorth Tracker v0.0.${{ github.run_number }}"
          body: |
            Release v0.0.${{ github.run_number }}
            Commit: ${{ github.sha }}
            
            ## Firebase App Distribution
            Test this build: ${{ env.TESTER_URL || 'URL not available' }}
            
            ## Release Notes
            $(cat build/release_notes/release_notes.txt)
