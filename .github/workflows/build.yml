name: Build and Deploy All Platforms

on:  
  push:
    branches:
      - mrudul
  
  workflow_dispatch:
    inputs:
      release_notes:
        description: 'Release notes for this build'
        required: false
        default: 'Feature updates and improvements'

jobs:
  android:
    name: Build Android
    runs-on: ubuntu-latest

    steps:
      - name: Checkout 
        uses: actions/checkout@v3

      # Setup Java with cache
      - name: Setup Java 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: 'gradle'
      
      # Accept Android SDK Licenses
      - name: Accept Android SDK Licenses
        run: yes | $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager --licenses || true

      # Setup Flutter
      - name: Install Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.29.3'
          cache: true

      # Cache Flutter dependencies
      - name: Cache Flutter dependencies
        uses: actions/cache@v3
        with:
          path: ${{ env.PUB_CACHE }}
          key: ${{ runner.os }}-pub-cache-${{ hashFiles('**/pubspec.lock') }}
          restore-keys: |
            ${{ runner.os }}-pub-cache-


      - name: Install Dependencies
        run: flutter pub get

      - name: Cache NDK
        uses: actions/cache@v3
        with:
          path: /usr/local/lib/android/sdk/ndk
          key: ${{ runner.os }}-ndk-27.0.12077973
          restore-keys: |
            ${{ runner.os }}-ndk-27.0.12077973

      - name: Build APK
        run: |
          # Accept NDK licenses and build with suppressed warnings
          yes | $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager --licenses >/dev/null 2>&1 || true
          echo '##[group]Building APK...'
          flutter build apk --split-per-abi --no-tree-shake-icons --suppress-analytics
          echo '##[endgroup]'
      
      - name: Rename APK with Build Number
        run: |
          mkdir -p build/renamed_apks
          cp build/app/outputs/flutter-apk/app-armeabi-v7a-release.apk build/renamed_apks/nwt-app-v0.0.${{ github.run_number }}.apk
      
      - name: Generate Release Notes
        run: |
          mkdir -p build/release_notes
          cat > build/release_notes/release_notes.txt << EOL
          Version: v0.0.${{ github.run_number }}
          Build Date: $(date +'%Y-%m-%d %H:%M:%S')
          Commit: ${{ github.sha }}
          Notes: ${{ github.event.inputs.release_notes || 'Feature updates and improvements' }}
          EOL

      - name: Upload to Firebase App Distribution
        id: firebase_distribution
        uses: wzieba/Firebase-Distribution-Github-Action@v1
        with:
          appId: ${{ secrets.FIREBASE_APP_ID }}
          serviceCredentialsFileContent: ${{ secrets.FIREBASE_SERVICE_ACCOUNT }}
          groups: devs
          file: build/renamed_apks/nwt-app-v0.0.${{ github.run_number }}.apk
          releaseNotesFile: build/release_notes/release_notes.txt

      # Upload APK Artifact
      - name: Upload APK Artifact
        uses: actions/upload-artifact@v4
        with:
          name: apk-build
          path: build/renamed_apks/nwt-app-v0.0.${{ github.run_number }}.apk
          retention-days: 5
          if-no-files-found: error
          
      # Web build will be handled in the web job

      - name: Verify Artifacts
        run: |
          echo "Verifying artifacts before release..."
          ls -la build/renamed_apks/
          ls -la build/renamed_builds/
          
      - name: Capture Firebase Distribution Output
        id: capture_output
        run: |
          CONSOLE_URL="https://console.firebase.google.com/project/${{ secrets.FIREBASE_PROJECT_ID }}/appdistribution/app/${{ secrets.FIREBASE_APP_ID }}/releases"
          TESTER_URL="https://appdistribution.firebase.google.com/testerapps/${{ secrets.FIREBASE_APP_ID }}"
          
          # Get the download URL for the APK
          APK_URL="https://github.com/${{ github.repository }}/releases/download/v0.0.${{ github.run_number }}/nwt-app-v0.0.${{ github.run_number }}.apk"
          WEB_ZIP_URL="https://github.com/${{ github.repository }}/releases/download/v0.0.${{ github.run_number }}/nwt-web-v0.0.${{ github.run_number }}.zip"

          cat > firebase_output.txt << EOL
          üöÄ Build Artifacts Available for Download:
          
          üì± Android APK:
          - Direct Download: $APK_URL
          
          üåê Web Build (ZIP):
          - Direct Download: $WEB_ZIP_URL
          
          üîó Firebase App Distribution:
          - Console: $CONSOLE_URL  
          - Tester Portal (login required): $TESTER_URL  
          
          ‚ÑπÔ∏è Version: v0.0.${{ github.run_number }}
          üîÑ Run Number: ${{ github.run_number }}
          EOL

          echo "FIREBASE_OUTPUT<<EOF" >> $GITHUB_ENV
          cat firebase_output.txt >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV

          cat firebase_output.txt

  web:
    name: Web Build
    needs: android
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: stable
          
      - name: Install Dependencies
        run: flutter pub get
        
      - name: Build Web
        run: |
          flutter config --enable-web
          echo '##[group]Building Web...'
          flutter build web --release
          echo '##[group]Web build complete'
          
      - name: Create Web Build Archive
        run: |
          mkdir -p build/renamed_builds
          cd build/web
          zip -r ../../build/renamed_builds/nwt-web-v0.0.${{ github.run_number }}.zip .
          echo '##[group]Web build archive created'
          ls -la ../../build/renamed_builds/

      - name: Generate Web Release Notes
        run: |
          mkdir -p build/release_notes
          cat > build/release_notes/web_release_notes.txt << 'EOL'
          Version: v0.0.${{ github.run_number }}
          Build Date: $(date +'%Y-%m-%d %H:%M:%S')
          Commit: ${{ github.sha }}
          Notes: ${{ github.event.inputs.release_notes || 'Feature updates and improvements' }}
          EOL
          
          # Also create a copy for the main release notes if it doesn't exist
          if [ ! -f "build/release_notes/release_notes.txt" ]; then
            cp build/release_notes/web_release_notes.txt build/release_notes/release_notes.txt
          fi
          
      - name: Upload Web Build Artifact
        uses: actions/upload-artifact@v4
        with:
          name: web-build
          path: |
            build/renamed_builds/nwt-web-v0.0.${{ github.run_number }}.zip
            build/release_notes/web_release_notes.txt
          retention-days: 5

      - name: Upload to Firebase Storage
        if: github.ref == 'refs/heads/dev'
        env:
          FIREBASE_SERVICE_ACCOUNT: ${{ secrets.FIREBASE_SERVICE_ACCOUNT }}
          FIREBASE_PROJECT_ID: ${{ secrets.FIREBASE_PROJECT_ID }}
        run: |
          # Install Firebase CLI
          curl -sL https://firebase.tools | bash
          
          # Authenticate with Firebase
          echo "$FIREBASE_SERVICE_ACCOUNT" > firebase-service-account.json
          firebase login:ci --no-localhost
          
          # Skip Firebase Hosting deployment for now
          echo "Skipping Firebase Hosting deployment as per configuration"
          
          # Just list the built files for verification
          echo "Build artifacts ready for GitHub Release:"
          ls -la build/renamed_apks/
          ls -la build/renamed_builds/

  notify:
    name: Notify Completion
    needs: [android, web]
    runs-on: ubuntu-latest
    steps:
      - name: Set up environment and show build results
        run: |
          # Show build results
          echo "‚úÖ Build and deployment completed successfully!"
          echo ""
          echo "üì± Android Build:"
          echo "   - Version: v0.0.${{ github.run_number }}"
          echo "   - Check the Firebase App Distribution for download links"
          echo ""
          echo "üåê Web Build:"
          echo "   - Version: v0.0.${{ github.run_number }}"
          echo "   - Download: Available in the workflow artifacts"
          
          # Set default FIREBASE_PROJECT_ID if not set
          if [ -z "${{ secrets.FIREBASE_PROJECT_ID }}" ]; then
            echo "   - Warning: FIREBASE_PROJECT_ID secret not set"
          else
            echo "   - Deployed to: https://${{ secrets.FIREBASE_PROJECT_ID }}.web.app"
          fi
          
          # Set release notes in environment
          if [ -f "build/release_notes/release_notes.txt" ]; then
            RELEASE_NOTES=$(cat build/release_notes/release_notes.txt)
            echo "RELEASE_NOTES<<EOF" >> $GITHUB_ENV
            echo "$RELEASE_NOTES" >> $GITHUB_ENV
            echo "EOF" >> $GITHUB_ENV
          else
            echo "Warning: release_notes.txt not found"
            echo "RELEASE_NOTES=No release notes available" >> $GITHUB_ENV
          fi

      - name: Create Release Notes
        id: create_release_notes
        run: |
          # Get current timestamp in a variable
          TIMESTAMP=$(date +'%Y-%m-%d %H:%M:%S')
          
          # Create release notes with timestamp
          cat > release_notes.md << EOL
          ## Build Information
          - **Version**: v0.0.${{ github.run_number }}
          - **Commit**: ${{ github.sha }}
          - **Build Date**: $TIMESTAMP
          - **Run Number**: ${{ github.run_number }}
          
          ## Included Artifacts
          - Android APK (armeabi-v7a)
          - Web Build (ZIP)
          
          ## Deployment
          - **Android**: Available in Firebase App Distribution
          - **Web**: Deployed to https://${{ secrets.FIREBASE_PROJECT_ID }}.web.app
          EOL
          
          # Set output for release body
          RELEASE_BODY=$(cat release_notes.md)
          echo "RELEASE_BODY<<EOF" >> $GITHUB_ENV
          echo "$RELEASE_BODY" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV
          
          # Output for debugging
          echo "Release notes created:"
          cat release_notes.md

      - name: Push to GitHub Releases
        uses: softprops/action-gh-release@v1
        with:
          name: "NetWorth Tracker v0.0.${{ github.run_number }}"
          tag_name: v0.0.${{ github.run_number }}
          body: ${{ env.RELEASE_BODY }}
          draft: false
          prerelease: false
          files: |
            build/renamed_apks/nwt-app-v0.0.${{ github.run_number }}.apk
            build/renamed_builds/nwt-web-v0.0.${{ github.run_number }}.zip
            build/release_notes/release_notes.txt
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN }}
        if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
